<div class="add">
   <form class="form" id="add">
      <div class="text">
         <input id="title" type="text" name="title" placeholder="Your Title *" maxlength="30" required>
         <input id="content" type="text" name="content" placeholder="Your Content *" maxlength="50" required>
         <input id="author" type="text" name="author" placeholder="Your Name *" maxlength="120" required>
      </div>

      <div class="button">
         <button type="submit">
            <i class="fa-solid fa-plus"></i>
         </button>
         <label for="file">
            <i class="fa-solid fa-image"></i>
         </label>
         <input name="files" type="file" id="file" style="display: none;">
      </div>
   </form>
   <div id="popup" style="display:none; position:fixed; top:50%; left:50%; transform:translate(-50%, -50%); background:white; border:1px solid #ccc; padding:20px; border-radius:10px; z-index:1000;">
      <p id="popup-message">You must upload an image.</p>
      <button id="close-popup" style="margin-top:10px; margin-left:60px; padding:5px 10px; background:#427D9D; color:white; border:none; border-radius:5px;">Close</button>
   </div>
   <div id="overlay" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5); z-index:999;"></div>
</div>

<script>
   // Form ve gerekli HTML elementlerini seç
   const add = document.getElementById('add'); // Form elemanı
   const popup = document.getElementById('popup'); // Uyarı mesajını içeren popup
   const overlay = document.getElementById('overlay'); // Popup'un arkasındaki karartma alanı
   const closePopup = document.getElementById('close-popup'); // Popup'u kapatmak için kullanılan buton
   const fileField = document.getElementById('file'); // Dosya seçme input'u

   // Popup'u kapatma olayını dinle
   closePopup.addEventListener('click', () => {
      popup.style.display = 'none'; // Popup'u gizle
      overlay.style.display = 'none'; // Arka plan karartmasını gizle
   });

   // Form gönderildiğinde çalışacak olay dinleyicisi
   add.addEventListener('submit', (e) => {
      e.preventDefault(); // Sayfanın yeniden yüklenmesini engelle

      // Eğer dosya yüklenmediyse uyarı popup'unu göster
      if (fileField.files.length === 0) {
         popup.style.display = 'block'; // Popup'u göster
         overlay.style.display = 'block'; // Arka plan karartmasını göster
         return; // İşlemi durdur
      }

      // Form verilerini FormData nesnesi olarak al
      const formData = new FormData(e.target);

      // Form verilerini '/admin/add' endpoint'ine gönder
      fetch('/admin/add', {
         method: 'post', // POST metodu kullanılarak veri gönderiliyor
         body: formData // Form verileri gönderiliyor
      })
         .then((response) => response.json()) // Sunucudan gelen yanıt JSON olarak ayrıştırılıyor
         .then((res) => {
            if (res.case) {
               // Eğer sunucu başarılı bir yanıt dönerse, 2 saniye sonra anasayfaya yönlendir
               setTimeout(() => {
                  window.location.href = '/';
               }, 2000);
            } else {
               // Hata mesajını konsola yazdır
               console.log(res.message || 'Bir hata oluştu.');
            }
         })
         .catch((err) => console.log('Form gönderilirken bir hata oluştu.')); // Fetch sırasında hata oluşursa konsola yazdır
   });
</script>

